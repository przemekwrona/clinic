openapi: 3.0.0
info:
  title: Clinic API
  version: 0.1.9
paths:
  /users:
    post:
      operationId: updateUser
      summary: Update user name and surname
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        200:
          description: 'User is created'

  /profile:
    get:
      operationId: getUserInfo
      summary: Return a one object list with user's profile
      responses:
        200:
          description: 'Return user information profile'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
  /login:
    post:
      operationId: login
      summary: Login user with credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /register:
    post:
      operationId: register
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        201:
          description: 'Id of created user'
  /reports/{reportId}:
    get:
      operationId: getReportById
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: integer
            description: Report id
      responses:
        200:
          description: Report
          content:
            application/json:
              schema:
                type: string

  /report:
    post:
      operationId: createReport
      summary: Create new report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReportRequest'
      responses:
        201:
          description: 'Id of created user'
  /patients:
    post:
      operationId: createPatients
      summary: Create patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePatientRequest'
      responses:
        201:
          description: 'Id of created user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePatientResponse'
    get:
      operationId: getPatients
      summary: Get patients
      responses:
        200:
          description: 'Id of created user'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patients'
  /patients/{patientId}/reports:
    get:
      operationId: getReports
      parameters:
        - in: path
          name: patientId
          required: true
          schema:
            type: string
            description: User's code
      responses:
        200:
          description: List of users' reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePatientRequest'
    post:
      operationId: assignReport
      parameters:
        - in: path
          name: patientId
          required: true
          schema:
            type: string
            description: User's code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
components:
  schemas:
    UserRequest:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
    AuthRequest:
      type: object
      properties:
        name:
          type: string
        password:
          type: string
    AuthResponse:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        token:
          type: string
    UserRegistrationRequest:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        password:
          type: string
    ProfileResponse:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        pwz:
          type: string
    CreateReportRequest:
      type: object
      properties:
        patientId:
          type: string
        report:
          type: string
    CreatePatientRequest:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        surname:
          type: string
        code:
          type: string
        surveys:
          type: array
          items:
            $ref: '#/components/schemas/Survey'
    CreatePatientResponse:
      type: object
      properties:
        patientId:
          type: number
    Patients:
      type: array
      items:
        $ref: '#/components/schemas/CreatePatientRequest'
    Survey:
      type: object
      properties:
        id:
          type: number
        surveyType:
          type: string
        createDate:
          type: string
          format: date-time
    Report:
      type: object
      properties:
        createDate:
          type: string
        reportType:
          type: string
        report:
          type: string
